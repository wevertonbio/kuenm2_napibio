% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modvar.R
\name{modvar}
\alias{modvar}
\title{Prediction variance coming from distinct sources in ENMs}
\usage{
modvar(
  model_projections,
  by_replicate = TRUE,
  by_gcm = TRUE,
  by_model = TRUE,
  consensus = "median",
  write_files = TRUE,
  output_dir = NULL,
  return_rasters = FALSE,
  progress_bar = FALSE,
  verbose = TRUE,
  overwrite = FALSE
)
}
\arguments{
\item{model_projections}{a \code{model_projections} object generated by the \code{\link{project_selected()}}() function. This object contains the file paths to the raster projection results and the thresholds used for binarizing the predictions.}

\item{by_replicate}{(logical) whether to compute the variance originating from replicates.}

\item{by_gcm}{(logical) whether to compute the variance originating from general circulation models (GCMs)}

\item{by_model}{(logical) whether to compute the variance originating from model parameterizations.}

\item{consensus}{(character) (character) the consensus measure to use for calculating changes. Available options are 'mean', 'median', 'range', and 'stdev' (standard deviation). Default is 'median'.}

\item{write_files}{(logical) whether to write the raster files containing the computed variance to the disk. Default is TRUE.}

\item{output_dir}{(character) the directory path where the resulting raster files containing the computed changes will be saved. Only relevant if \code{write_results = TRUE}.}

\item{return_rasters}{(logical) whether to return a list containing all the SpatRasters with the computed changes. Default is FALSE, meaning the function will return a NULL object.}

\item{progress_bar}{(logical) whether to display a progress bar during processing. Default is TRUE.}

\item{verbose}{(logical) whether to display messages during processing. Default is TRUE.}

\item{overwrite}{whether to overwrite SpatRaster if they already exists. Only applicable if \code{write_files} is set to TRUE. Default is FALSE.}
}
\value{
If return_rasters = TRUE, the function returns a list containing the SpatRasters with the computed variances, categorized by replicate, model, and GCMs.
}
\description{
This function calculates the variance in model predictions, distinguishing between the different sources of variation. The potential sources include replicates, model parameterizations, and general circulation models (GCMs). The latter is considered only when time projections are performed.
}
\examples{
# Organize and structure future climate variables from WorldClim
# Import the current variables used to fit the model.
# In this case, SoilType will be treated as a static variable (constant across future scenarios).
var <- terra::rast(system.file("extdata", "Current_variables.tif",
                               package = "kuenm2"))
# Create a "Current_raw" folder in a temporary directory and copy the raw variables there.
out_dir_current <- file.path(tempdir(), "Current_raw")
dir.create(out_dir_current, recursive = TRUE)
# Save current variables in temporary directory
writeRaster(var, file.path(out_dir_current, "Variables.tif"))

# Set the input directory containing the raw future climate variables.
# For this example, the data is located in the "inst/extdata" folder.
in_dir <- "inst/extdata/"
# Create a "Future_raw" folder in a temporary directory and copy the raw variables there.
out_dir_future <- file.path(tempdir(), "Future_raw")
# Organize and rename the future climate data, structuring it by year and GCM.
# The 'SoilType' variable will be appended as a static variable in each scenario.
# The files will be renamed following the "bio_" format
organize_future_worldclim(input_dir = in_dir,
                          output_dir = out_dir_future,
                          name_format = "bio_", variables = NULL,
                          fixed_variables = var$SoilType, mask = NULL,
                          overwrite = TRUE)

#Example with GLMNET
# Import example of fitted_models (output of fit_selected())
data("fitted_model_glmnet", package = "kuenm2")

# Prepare projections using fitted models to check variables
pr <- prepare_proj(models = fitted_model_glmnet,
                   present_dir = out_dir_current,
                   past_dir = NULL,
                   past_period = NULL,
                   past_gcm = NULL,
                   future_dir = out_dir_future,
                   future_period = c("2041-2060", "2081-2100"),
                   future_pscen = c("ssp126", "ssp585"),
                   future_gcm = c("ACCESS-CM2", "MIROC6"),
                   write_file = FALSE,
                   filename = NULL,
                   raster_pattern = ".tif*")

#Create folder to save projection results
out_dir <- file.path(tempdir(), "Projection_results/glmnet")
dir.create(out_dir, recursive = TRUE)

# Project selected models for multiple scenarios
#Set write_replicates = TRUE to compute variance coming from replicates
p <- project_selected(models = fitted_model_glmnet,
                      projection_data = pr,
                      out_dir = out_dir,
                      consensus_per_model = TRUE,
                      consensus_general = TRUE,
                      consensus = c("median", "range", "mean", "stdev"),
                      write_replicates = TRUE,
                      clamping = FALSE,
                      var_to_clamp = NULL,
                      type = "cloglog",
                      overwrite = TRUE,
                      parallel = FALSE,
                      ncores = 1,
                      parallelType = "doSNOW",
                      progress_bar = TRUE,
                      verbose = TRUE)

# Compute variance from distinct sources
v <- modvar(model_projections = p,
            by_replicate = TRUE,
            by_gcm = TRUE,
            by_model = TRUE,
            consensus = "median",
            write_files = FALSE,
            output_dir = NULL,
            return_rasters = TRUE,
            progress_bar = FALSE,
            verbose = TRUE,
            overwrite = FALSE)
plot(v$Present$by_rep) #Variance coming from replicates in Present projection
plot(v$Present$by_model) #Variance coming from models in Present projection
plot(v$`Future_2041-2060_ssp126`$by_rep) #Variance coming from replicates in one of the future projections
plot(v$`Future_2041-2060_ssp126`$by_model) #Variance coming from models in one of the future projections
plot(v$`Future_2041-2060_ssp126`$by_gcm) #Variance coming from GCMs in one of the future projections
}
