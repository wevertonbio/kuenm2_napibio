% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perform_pca.R
\name{perform_pca}
\alias{perform_pca}
\title{Transform variables using Principal Component analysis (PCA)}
\usage{
perform_pca(spat_variables, exclude_from_pca = NULL, project = FALSE,
       projection_data = NULL, out_dir = NULL, overwrite = FALSE,
       progress_bar = FALSE, center = TRUE, scale = TRUE,
       deviance_explained = 95, min_explained = 5)
}
\arguments{
\item{spat_variables}{(SpatRaster) set of predictor variables that the
function will summarize into a set of orthogonal, uncorrelated
components based on PCA.}

\item{exclude_from_pca}{(character) variable names within spat_variables that
should not be included in the PCA transformation. Instead, these
variables will be added directly to the final set of output variables
without being modified. The default is NULL, meaning all variables
will be used unless specified otherwise.}

\item{project}{(logical) whether the function should project new data from
different scenarios (e.g. future variables) onto the PCA coordinates
generated by the initial analysis. If TRUE, the argument
projection_data needs to be defined. Default is FALSE.}

\item{projection_data}{an object of class \code{prepared_proj} returned by the
\code{\link{prepare_proj()}}() function. This file contains the paths
to the rasters representing each scenario. Only applicable if
\code{project = TRUE}. Default is NULL.}

\item{out_dir}{(character) a path to a root directory for saving the raster
files of each projection.}

\item{overwrite}{(logical) whether to overwrite SpatRaster if they already
exists when projecting. Only applicable if \code{write_files} is set to
TRUE. Default is FALSE.}

\item{progress_bar}{(logical) whether to display a progress bar during
processing projections. Only applicable if \code{project = TRUE}. Default
is FALSE}

\item{center}{(logical) whether the variables should be zero-centered.
Default is TRUE.}

\item{scale}{(logical) whether the variables should be scaled to have unit
variance before the analysis takes place. Default is TRUE.}

\item{deviance_explained}{(numeric) the cumulative percentage of total
variance that must be explained by the selected principal components.
Default is 95.}

\item{min_explained}{(numeric) the minimum percentage of total variance that
a principal component must explain to be retained. Default is 5.}
}
\value{
A list containing the following elements:
\itemize{
\item env: A SpatRaster object that holds the orthogonal components derived from
the PCA axes of the predictor variables.
\item pca: an object of class prcomp, containing the details of the PCA analysis.
See \code{\link{stats::prcomp()}}()
\item deviance_explained_cum_sum: The cumulative percentage of total variance
explained by each of the selected principal components. This value indicates
how much of the dataâ€™s original variability is captured by the PCA
transformation.
\item projection_directory: the root directory where projection files were saved,
applicable only if \code{project} was set to TRUE. This directory contains the
projected raster files for each scenario.
}
}
\description{
This function applies principal component analysis (PCA) to a set of
predictor variables. It transforms and project them into a new set of
uncorrelated, orthogonal components based on the PCA axes, which can be used
to simplify data structure and reduce correlations.
}
\examples{
#PCA only with current variables
#Import raster layers
var <- terra::rast(system.file("extdata", "Current_variables.tif",
                               package = "kuenm2"))

#PCA
pca_var <- perform_pca(spat_variables = var, exclude_from_pca = "SoilType",
                       center = TRUE, scale = TRUE, deviance_explained = 95,
                       min_explained = 5)
plot(pca_var$env)

#Project PCA for new scenarios (future)
# First, organize and prepare future variables
# Set the input directory containing the raw future climate variables
# For this example, the data is located in the "inst/extdata" folder.
in_dir <- "inst/extdata/"
# Create a "Future_raw" folder in a temporary directory and copy the raw variables there.
out_dir_future <- file.path(tempdir(), "Future_raw")
# Organize and rename the future climate data, structuring it by year and GCM.
# The 'SoilType' variable will be appended as a static variable in each scenario.
# The files will be renamed following the "bio_" format
organize_future_worldclim(input_dir = in_dir,
                          output_dir = out_dir_future,
                          name_format = "bio_", variables = NULL,
                          fixed_variables = var$SoilType, mask = NULL,
                          overwrite = TRUE)

# Prepare projections
pr <- prepare_proj(variable_names = c("bio_1", "bio_7", "bio_12", "bio_15",
                                      "SoilType"),
                   present_dir = NULL,
                   past_dir = NULL,
                   past_period = NULL,
                   past_gcm = NULL,
                   future_dir = out_dir_future,
                   future_period = c("2041-2060", "2081-2100"),
                   future_pscen = c("ssp126", "ssp585"),
                   future_gcm = c("ACCESS-CM2", "MIROC6"),
                   write_file = FALSE,
                   filename = NULL,
                   raster_pattern = ".tif*")

#Create folder to save projection results
out_dir <- file.path(tempdir(), "PCA_projections")
dir.create(out_dir, recursive = TRUE)

#Perform and project PCA for new scenarios (future)
proj_pca <- perform_pca(spat_variables = var, exclude_from_pca = "SoilType",
                        project = TRUE, projection_data = pr, out_dir = out_dir,
                        overwrite = TRUE, progress_bar = FALSE,
                        center = TRUE, scale = TRUE,
                        deviance_explained = 95,
                        min_explained = 5)
proj_pca$projection_directory #Directory with projected PCA-variables

}
